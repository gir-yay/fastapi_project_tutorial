name : CI/CD pipline
on: 
  push:
    branches:
        - "main"
jobs:
  build:
    environment:
      name: testing
      
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ vars.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      DATABASE_URL: localhost
      DATABASE_PORT: 5432
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}_test
      DATABASE_ROOT_USER: ${{ secrets.DATABASE_ROOT_USER }}
      DATABASE_ROOT_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}
          POSTGRES_DB: fastapi_db_test
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    runs-on: ubuntu-latest
    steps:
      - name: checking the repository
        uses: actions/checkout@v2
      
      - name: install python v3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: update pip
        run: python -m pip install --upgrade pip
      
      - name: installing requirements
        run: pip install -r requirements.txt

      - name: test with pytest
        run: |
          pip install pytest
          sleep 10
          pytest


      - name: login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.USERNAME}}
          password: ${{secrets.TOKEN}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.USERNAME }}/fastapi_project_tutorial:latest
    
      - name: Log out from Docker Hub
        run: docker logout


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd app/src
            git pull
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api

      
          
      
      


        
        

